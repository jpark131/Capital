{"version":3,"sources":["view/images/logo-temp.png","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/transactionTable.jsx","services/httpService.js","services/userService.js","components/common/pie.jsx","utils/monthMap.js","components/common/listGroup.jsx","components/home.jsx","components/common/navbar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","services/transactionService.js","components/transaction.jsx","services/authService.js","components/login.jsx","components/register.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","this","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","get","createKey","_id","data","Table","TransactionTable","t","date","toString","split","slice","join","transaction","to","onDelete","transactions","axios","interceptors","response","use","error","status","console","log","alert","Promise","reject","post","put","delete","setJwt","jwt","defaults","headers","common","endpoint","config","url","register","user","http","name","email","password","getUserObject","a","getCategories","categories","some","c","category","index","findIndex","amount","push","Pie","pieData","title","value","color","Math","random","padStart","Fragment","paddingAngle","lineWidth","rounded","radius","center","dataEntry","labelStyle","fontSize","textAlign","labelPosition","monthMap","ListGroup","items","onItemSelect","selectedItem","Date","getMonth","getFullYear","Home","state","months","currentMonth","budget","handleSort","setState","handleMonthSelect","handleDelete","getPageData","allTransactions","allCategories","filtered","spent","length","filter","find","e","sorted","orderBy","month","includes","toDateString","getMonths","indexOf","year","newDate","style","marginLeft","NavBar","history","listen","shouldLogout","window","location","pathname","loggedIn","src","logo","alt","id","handleLogout","withRouter","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","type","onChange","saveTransaction","getTransaction","transactionId","Transaction","business","required","string","min","max","number","transId","match","params","toState","replace","populateTransaction","onSubmit","backgroundColor","localStorage","setItem","getJwt","getItem","login","logout","removeItem","getUser","jwtDecode","ex","logInWithJwt","Login","auth","from","placeholder","Register","userService","Logout","ProtectedRoute","component","render","App","exact","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"+LAAAA,EAAOC,QAAU,IAA0B,uC,uSCuC5BC,E,4MApCbC,UAAY,SAACC,GACX,IAAMC,EAAU,eAAQ,EAAKC,MAAMD,YAC/BA,EAAWD,OAASA,EACtBC,EAAWE,MAA6B,QAArBF,EAAWE,MAAkB,OAAS,OAEzDF,EAAWD,KAAOA,EAClBC,EAAWE,MAAQ,OAErB,EAAKD,MAAME,OAAOH,I,EAGpBI,eAAiB,SAACC,GAAY,IACpBL,EAAe,EAAKC,MAApBD,WACR,OAAIK,EAAON,OAASC,EAAWD,KAAa,KACnB,QAArBC,EAAWE,MAAwB,uBAAGI,UAAU,mBAC7C,uBAAGA,UAAU,qB,uDAGZ,IAAD,OACP,OACE,+BACE,wBAAIA,UAAU,aACXC,KAAKN,MAAMO,QAAQC,KAAI,SAACJ,GAAD,OACtB,wBACEK,IAAKL,EAAON,MAAQM,EAAOK,IAC3BC,QAAS,kBAAM,EAAKb,UAAUO,EAAON,QAEpCM,EAAOO,MAJV,IAIkB,EAAKR,eAAeC,a,GA5BxBQ,aC6BXC,E,4MA3BbC,WAAa,SAACC,EAAD,GAA8B,IAArBC,EAAoB,EAApBA,QAASlB,EAAW,EAAXA,KAC7B,OAAIkB,EAAgBA,EAAQD,GACrBE,IAAEC,IAAIH,EAAMjB,I,EAGrBqB,UAAY,cAA6B,IAA1BC,EAAyB,EAAzBA,IAAStB,EAAgB,EAAhBA,KAAMW,EAAU,EAAVA,IAC5B,OAAOW,GAAOtB,GAAQW,I,uDAGd,IAAD,SACmBH,KAAKN,MAAvBqB,EADD,EACCA,KAAMd,EADP,EACOA,QACd,OACE,+BACGc,EAAKb,KAAI,SAACO,GAAD,OACR,wBAAIN,IAAKM,EAAKK,KACXb,EAAQC,KAAI,SAACJ,GAAD,OACX,wBAAIK,IAAK,EAAKU,UAAUJ,EAAMX,IAC3B,EAAKU,WAAWC,EAAMX,gB,GAlBfQ,aCUTU,EATD,SAAC,GAA2C,IAAzCf,EAAwC,EAAxCA,QAASR,EAA+B,EAA/BA,WAAYG,EAAmB,EAAnBA,OAAQmB,EAAW,EAAXA,KAC5C,OACE,2BAAOhB,UAAU,SACf,kBAAC,EAAD,CAAaE,QAASA,EAASR,WAAYA,EAAYG,OAAQA,IAC/D,kBAAC,EAAD,CAAWmB,KAAMA,EAAMd,QAASA,M,OC+CvBgB,E,4MAlDbhB,QAAU,CACR,CACET,KAAM,OACNa,MAAO,OACPK,QAAS,SAACQ,GACR,MAAM,GAAN,OAAUA,EAAEC,KAAKC,WAAWC,MAAM,KAAKC,MAAM,EAAG,GAAGC,KAAK,QAG5D,CACE/B,KAAM,WACNa,MAAO,iBAET,CAAEb,KAAM,WAAYa,MAAO,YAC3B,CAAEb,KAAM,SAAUa,MAAO,cACzB,CACEF,IAAK,OACLO,QAAS,SAACc,GAAD,OACP,kBAAC,IAAD,CACEzB,UAAU,kBACV0B,GAAE,wBAAmBD,EAAYV,MAFnC,UAQJ,CACEX,IAAK,SACLO,QAAS,SAACc,GAAD,OACP,4BACEpB,QAAS,kBAAM,EAAKV,MAAMgC,SAASF,IACnCzB,UAAU,kBAFZ,a,uDASI,IAAD,EACsCC,KAAKN,MAA1CiC,EADD,EACCA,aAAc/B,EADf,EACeA,OAAQH,EADvB,EACuBA,WAC9B,OACE,kBAAC,EAAD,CACEQ,QAASD,KAAKC,QACdc,KAAMY,EACNlC,WAAYA,EACZG,OAAQA,Q,GA7CeU,a,iBCF/BsB,IAAMC,aAAaC,SAASC,IAAI,MAAM,SAACC,GAUrC,OAREA,EAAMF,UACNE,EAAMF,SAASG,QAAU,KACzBD,EAAMF,SAASG,OAAS,MAExBC,QAAQC,IAAI,oBAAqBH,GACjCI,MAAM,iCAGDC,QAAQC,OAAON,MAOT,OACbpB,IAAKgB,IAAMhB,IACX2B,KAAMX,IAAMW,KACZC,IAAKZ,IAAMY,IACXC,OAAQb,IAAMa,OACdC,OATF,SAAgBC,GACdf,IAAMgB,SAASC,QAAQC,OAAO,gBAAkBH,I,QCb5CI,EAAWC,EAAOC,IAAM,SAEvB,SAASC,EAASC,GACvB,OAAOC,EAAKb,KAAKQ,EAAU,CACzBM,KAAMF,EAAKE,KACXC,MAAOH,EAAKG,MACZC,SAAUJ,EAAKI,WAIZ,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,+EAE0BL,EAAKxC,IAAIoC,EAAOC,IAAM,aAFhD,uBAEWE,EAFX,EAEKpC,KAFL,kBAGIoC,GAHJ,0F,sBAOA,SAAeO,IAAtB,+B,4CAAO,sCAAAD,EAAA,6DACDE,EAAa,GADZ,SAEcH,IAFd,OAECL,EAFD,qBAISA,EAAKxB,cAJd,IAIL,IAJK,iBAIIT,EAJJ,QAKEyC,EAAWC,MAAK,SAACC,GAAD,OAAOA,EAAER,OAASnC,EAAE4C,aAGvCC,EAAQJ,EAAWK,WAAU,SAACH,GAAD,OAAOA,EAAER,OAASnC,EAAE4C,YACjDH,EAAWI,GAAOE,QAAU/C,EAAE+C,QAH9BN,EAAWO,KAAK,CAAEb,KAAMnC,EAAE4C,SAAUG,OAAQ/C,EAAE+C,UAFlD,uBAAkC,IAJ7B,uDAYEN,GAZF,4C,sBAeQ,I,QCCAQ,E,uKAhCH,IAEFC,EADiBpE,KAAKN,MAApBiE,WACmBzD,KAAI,SAAC2D,GAC9B,MAAO,CACLQ,MAAOR,EAAER,KACTiB,MAAOT,EAAEI,OACTM,MAAM,IAAD,QAAwB,SAAhBC,KAAKC,UAAwB,GACvCrD,SAAS,IACTsD,SAAS,EAAG,UAGnB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,WAAD,CACEC,aAAc,EACdC,UAAU,KACVC,SAAO,EACPC,OAAO,KACPC,OAAQ,CAAC,GAAI,IACbjE,KAAMqD,EACN/D,MAAO,gBAAG4E,EAAH,EAAGA,UAAH,gBAAsBA,EAAUZ,MAAhC,eAA4CY,EAAUX,QAC7DY,WAAY,CACVC,SAAU,MACVC,UAAW,UAEbC,cAAc,a,GA1BN/E,aCHLgF,EAAW,CACtB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OCcaC,EAvBG,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACxC,OACE,wBAAI3F,UAAU,cACXyF,EAAMtF,KAAI,SAACO,GACV,IAAMU,EAAO,IAAIwE,KAAKlF,GACtB,OACE,wBACEN,IAAKM,EACLL,QAAS,kBAAMqF,EAAahF,IAC5BV,UACEU,IAASiF,EACL,8BACA,wBAGLJ,EAASnE,EAAKyE,YATjB,MASiCzE,EAAK0E,oBC0GjCC,E,4MApHbC,MAAQ,CACNpE,aAAc,GACdgC,WAAY,GACZqC,OAAQ,GACRvG,WAAY,CAAED,KAAM,OAAQG,MAAO,OACnCsG,aAAc,IAAIN,KAClBO,OAAQ,G,EA6BVC,WAAa,SAAC1G,GACZ,EAAK2G,SAAS,CAAE3G,gB,EAWlB4G,kBAAoB,SAAClF,GACnB,EAAKiF,SAAS,CAAEH,aAAc9E,K,EAGhCmF,aAAe,WACbpE,QAAQC,IAAI,W,EAGdoE,YAAc,WAAO,IAAD,EAMd,EAAKR,MAJOS,EAFE,EAEhB7E,aACY8E,EAHI,EAGhB9C,WACAlE,EAJgB,EAIhBA,WACAwG,EALgB,EAKhBA,aAEES,EAAWF,EACXG,EAAQ,EACRhD,EAAa8C,EAEjB,GAAIC,EAASE,OAAS,EAAG,CACvBF,EAAWF,EAAgBK,QACzB,SAAC3F,GAAD,OAAO,IAAIyE,KAAKzE,EAAEC,MAAMyE,aAAe,IAAID,KAAKM,GAAcL,cAEhEjC,EAAa,GAJU,oBAKT+C,GALS,yBAKdxF,EALc,QAMrByF,GAASzF,EAAE+C,OACPN,EAAWmD,MAAK,SAACC,GAAD,OAAOA,EAAE1D,OAASnC,EAAE4C,YACtCH,EAAWmD,MAAK,SAACC,GAAD,OAAOA,EAAE1D,OAASnC,EAAE4C,YAAUG,QAAU/C,EAAE+C,OACvDN,EAAWO,KAAK,CAAEb,KAAMnC,EAAE4C,SAAUG,OAAQ/C,EAAE+C,UAJrD,2BAAyB,IALF,+BAczB,MAAO,CAAE+C,OAFMrG,IAAEsG,QAAQP,EAAU,CAACjH,EAAWD,MAAO,CAACC,EAAWE,QAEjDgH,QAAOhD,e,wDAvEhBhC,GACR,IACIuF,EAFkB,EAClBlB,EAAS,GADS,cAGRrE,GAHQ,IAGtB,2BAA4B,CAAC,IAApBT,EAAmB,QAC1BA,EAAEC,KAAO,IAAIwE,KAAKzE,EAAEC,MACpB+F,EAAQ,IAAIvB,KAAKzE,EAAEC,KAAK0E,cAAe3E,EAAEC,KAAKyE,YACzCI,EAAOmB,SAASD,EAAME,iBACzBpB,EAAO9B,KAAKgD,EAAME,iBAPA,8BAStB,OAAOpB,I,wLAIYxC,I,UAAbL,E,wDAEAxB,EAAewB,EAAKxB,aACtBgC,EAAa,G,cACHhC,G,IAAd,4BAAST,EAAmB,SACxBC,KAAO,IAAIwE,KAAKzE,EAAEC,M,+CAEHuC,I,QAAnBC,E,OACMqC,EAAShG,KAAKqH,UAAU1F,GACxBuE,EAAS/C,EAAK+C,OACpBlG,KAAKoG,SAAS,CAAEzE,eAAcgC,aAAYuC,SAAQF,W,qIAO5C7E,GACN,IAAME,EAAQF,EAAKE,MAAM,KACnB6F,EAAQlH,KAAKsF,SAASgC,QAAQjG,EAAM,IACpCkG,EAAOlG,EAAM,GACbmG,EAAU,IAAI7B,KAAK4B,EAAML,GAC/B,OAAOM,I,+BAuCC,IAAD,EAC8CxH,KAAK+F,MAAlDtG,EADD,EACCA,WAAYyG,EADb,EACaA,OAAQD,EADrB,EACqBA,aAAcD,EADnC,EACmCA,OADnC,EAE6ChG,KAAKuG,cAAzC5E,EAFT,EAECqF,OAAsBL,EAFvB,EAEuBA,MAAOhD,EAF9B,EAE8BA,WACrC,OACE,yBAAK5D,UAAU,4BACb,qDAA2BmG,GAC3B,qDAA2BS,GAC3B,yBAAK5G,UAAU,YACb,yBAAKA,UAAU,QAAQ0H,MAAO,CAAEC,WAAY,MAC1C,kBAAC,EAAD,CACElC,MAAOQ,EACPN,aAAcO,EACdR,aAAczF,KAAKqG,qBAGvB,yBAAKtG,UAAU,SACb,kBAAC,EAAD,CACE4B,aAAcA,EACdgF,MAAOA,EACPlH,WAAYA,EACZiC,SAAU1B,KAAKsG,aACf1G,OAAQI,KAAKmG,cAGjB,yBAAKpG,UAAU,OACb,kBAAC,EAAD,CAAK4B,aAAcA,EAAcgC,WAAYA,W,GA7GtCrD,a,yBCDbqH,E,kLACiB,IAAD,OAClB3H,KAAKN,MAAMkI,QAAQC,QAAO,WACxB,IAAMC,EAA4C,WAA7BC,OAAOC,SAASC,SACrC,EAAK7B,SAAS,CAAE8B,UAAWJ,S,+BAIrB,IACA3E,EAASnD,KAAKN,MAAdyD,KACR,OACE,yBAAKpD,UAAU,iDACb,kBAAC,IAAD,CAAMA,UAAU,YAAY0B,GAAG,SAC7B,yBAAK0G,IAAKC,IAAMC,IAAI,kBAEtB,yBAAKtI,UAAU,2BAA2BuI,GAAG,aAC3C,yBAAKvI,UAAU,sBACZoD,GACC,kBAAC,IAAMwB,SAAP,KACE,kBAAC,IAAD,CACE5E,UAAU,gEACV0B,GAAG,oBAFL,mBAOA,kBAAC,IAAD,CACE1B,UAAU,oCACV0B,GAAG,YAEF0B,EAAKE,KAJR,cAOA,kBAAC,IAAD,CACEtD,UAAU,wBACVK,QAASJ,KAAKuI,aACd9G,GAAG,WAHL,YASF0B,GACA,kBAAC,IAAD,CAASpD,UAAU,8BAA8B0B,GAAG,UAApD,gB,GA3COnB,aAsDNkI,cAAWb,G,yCC/CXc,EAXD,SAAC,GAAqC,IAAnCpF,EAAkC,EAAlCA,KAAMhD,EAA4B,EAA5BA,MAAO2B,EAAqB,EAArBA,MAAU0G,EAAW,wCACjD,OACE,yBAAK3I,UAAU,cACb,2BAAO4I,QAAStF,IACfhD,EACD,2CAAWqI,EAAX,CAAiBrF,KAAMA,EAAMiF,GAAIjF,EAAMtD,UAAU,kBAChDiC,GAAS,yBAAKjC,UAAU,sBAAsBiC,KCWtC4G,EAjBA,SAAC,GAA8C,IAA5CvF,EAA2C,EAA3CA,KAAMhD,EAAqC,EAArCA,MAAO2B,EAA8B,EAA9BA,MAAO6G,EAAuB,EAAvBA,QAAYH,EAAW,kDAC3D,OACE,yBAAK3I,UAAU,cACb,2BAAO4I,QAAStF,GAAOhD,GACvB,4CAAYqI,EAAZ,CAAkBrF,KAAMA,EAAMiF,GAAIjF,EAAMtD,UAAU,iBAChD,4BAAQuE,MAAM,KACbuE,EAAQ3I,KAAI,SAAC4I,GAAD,OACX,4BAAQ3I,IAAK2I,EAAOhI,IAAKwD,MAAOwE,EAAOhI,KACpCgI,EAAOzF,UAIbrB,GAAS,yBAAKjC,UAAU,sBAAsBiC,KCuEtC+G,E,4MA/EbhD,MAAQ,CACNhF,KAAM,GACNiI,OAAQ,I,EAGVC,SAAW,WACT,IACQjH,EAAUkH,IAAID,SAAS,EAAKlD,MAAMhF,KAAM,EAAKoI,OADrC,CAAEC,YAAY,IACtBpH,MACR,IAAKA,EAAO,OAAO,KAEnB,IALe,EAKTgH,EAAS,GALA,cAMEhH,EAAMqH,SANR,IAMf,gCAAS5I,EAAT,QAAgCuI,EAAOvI,EAAKjB,KAAK,IAAMiB,EAAK6I,SAN7C,8BAOf,OAAON,G,EAGTO,iBAAmB,YAAsB,IAAnBlG,EAAkB,EAAlBA,KAAMiB,EAAY,EAAZA,MACpBkF,EAAG,eAAMnG,EAAOiB,GAChB6E,EAAM,eAAM9F,EAAO,EAAK8F,OAAO9F,IAC7BrB,EAAUkH,IAAID,SAASO,EAAKL,GAA5BnH,MACR,OAAOA,EAAQA,EAAMqH,QAAQ,GAAGC,QAAU,M,EAG5CG,aAAe,SAAC1C,GACdA,EAAE2C,iBACF,IAAMV,EAAS,EAAKC,WACpB,EAAK7C,SAAS,CAAE4C,OAAQA,GAAU,KAC9BA,GACJ,EAAKW,SAAS,EAAK5D,MAAMhF,O,EAG3B6I,aAAe,YAA+B,IAAbC,EAAY,EAA3BC,cACVd,EAAM,eAAQ,EAAKjD,MAAMiD,QACzBe,EAAe,EAAKR,iBAAiBM,GACvCE,EAAcf,EAAOa,EAAMxG,MAAQ0G,SAC3Bf,EAAOa,EAAMxG,MAEzB,IAAMtC,EAAI,eAAQ,EAAKgF,MAAMhF,MAC7BA,EAAK8I,EAAMxG,MAAQwG,EAAMvF,MACzB,EAAK8B,SAAS,CAAErF,OAAMiI,Y,2DAGX3I,GACX,OACE,4BAAQ2J,SAAUhK,KAAKiJ,WAAYlJ,UAAU,mBAC1CM,K,kCAKKgD,EAAMhD,GAAuB,IAAhB4J,EAAe,uDAAR,OAAQ,EACbjK,KAAK+F,MAAtBhF,EAD8B,EAC9BA,KAAMiI,EADwB,EACxBA,OACd,OACE,kBAAC,EAAD,CACEiB,KAAMA,EACN5G,KAAMA,EACNiB,MAAOvD,EAAKsC,GACZhD,MAAOA,EACP2B,MAAOgH,EAAO3F,GACd6G,SAAUlK,KAAK4J,iB,mCAKRvG,EAAMhD,EAAOwI,GAAU,IAAD,EACR7I,KAAK+F,MAAtBhF,EADyB,EACzBA,KAAMiI,EADmB,EACnBA,OAEd,OACE,kBAAC,EAAD,CACE3F,KAAMA,EACNiB,MAAOvD,EAAKsC,GACZhD,MAAOA,EACPwI,QAASA,EACTqB,SAAUlK,KAAK4J,aACf5H,MAAOgH,EAAO3F,S,GA1EH/C,aCFb2C,EAAG,UAAMD,EAAOC,IAAb,iBAEF,SAAekH,EAAtB,kC,4CAAO,WAA+B3I,GAA/B,iBAAAiC,EAAA,6DACLjC,EAAYL,KAAO,IAAIwE,KAAKnE,EAAYL,MACpCK,EAAYV,IAFX,SAKkBsC,EAAKb,KAAKU,EAAKzB,GALjC,uBAKGT,EALH,EAKGA,KALH,kBAMEA,GANF,4C,sBASA,SAAeqJ,EAAtB,mC,8CAAO,WAA8BC,GAA9B,iBAAA5G,EAAA,sEAC+BL,EAAKxC,IAAL,UAAYqC,EAAZ,YAAmBoH,IADlD,uBACS7I,EADT,EACGT,KADH,kBAEES,GAFF,4C,0BC2FQ8I,G,4MA/FbvE,MAAQ,CACNhF,KAAM,CAAEI,KAAM,GAAI2C,SAAU,GAAIyG,SAAU,GAAItG,OAAQ,IACtD+E,OAAQ,I,EAGVG,OAAS,CACPhI,KAAM+H,IAAI/H,OAAOqJ,WACjB1G,SAAUoF,IAAIuB,SAASC,IAAI,GAAGC,IAAI,IAAIH,WACtCD,SAAUrB,IAAIuB,SAASC,IAAI,GAAGC,IAAI,IAAIH,WACtCvG,OAAQiF,IAAI0B,SAASF,IAAI,GAAGF,Y,EAG9Bb,SAAW,SAACnI,GACV2I,EAAgB3I,GAEhB,EAAK9B,MAAMkI,QAAQ1D,KAAK,U,oMAMN,SADV2G,EAAU7K,KAAKN,MAAMoL,MAAMC,OAAOzC,I,iEAGd8B,EAAeS,G,OAAnCrJ,E,OACAwJ,EAAU,CACd7J,KAAMK,EAAYL,KAClB2C,SAAUtC,EAAYsC,SACtByG,SAAU/I,EAAY+I,SACtBtG,OAAQzC,EAAYyC,QAEtBjE,KAAKoG,SAAS,CAAErF,KAAMiK,I,kDAElB,KAAGlJ,UAAmC,MAAvB,KAAGA,SAASG,QAC7BjC,KAAKN,MAAMkI,QAAQqD,QAAQ,c,oRAKzBjL,KAAKkL,sB,qIAGH,IAAD,EACkBlL,KAAK+F,MAAtBhF,EADD,EACCA,KAAMiI,EADP,EACOA,OACd,OACE,yBAAKjJ,UAAU,eACb,0BAAMoL,SAAUnL,KAAKyJ,cACnB,2BAAOd,QAAQ,QAAf,WACA,2BACEsB,KAAK,OACL3B,GAAG,OACHjF,KAAK,OACLiB,MAAOvD,EAAKI,KACZa,MAAOgH,EAAO7H,KACd+I,SAAUlK,KAAK4J,eAEjB,2BAAOjB,QAAQ,YAAf,aACA,2BACEsB,KAAK,OACL3B,GAAG,WACHjF,KAAK,WACLiB,MAAOvD,EAAK+C,SACZ9B,MAAOgH,EAAOlF,SACdoG,SAAUlK,KAAK4J,eAEjB,2BAAOjB,QAAQ,YAAf,mBACA,2BACEsB,KAAK,OACL3B,GAAG,WACHjF,KAAK,WACLiB,MAAOvD,EAAKwJ,SACZvI,MAAOgH,EAAOuB,SACdL,SAAUlK,KAAK4J,eAEjB,2BAAOjB,QAAQ,UAAf,wBACA,2BACEsB,KAAK,SACL3B,GAAG,SACHjF,KAAK,SACLiB,MAAOvD,EAAKkD,OACZjC,MAAOgH,EAAO/E,OACdiG,SAAUlK,KAAK4J,eAEjB,4BACEnC,MAAO,CAAE2D,gBAAiB,WAC1BnB,KAAK,SACLlK,UAAU,mBAHZ,gB,GAnFgBgJ,G,4BCLpBhG,GAAWC,EAAOC,IAAM,S,8CAGvB,mCAAAQ,EAAA,6DAAuBH,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,SAA9B,SACuBH,EAAKb,KAAKQ,GAAU,CAAEO,QAAOC,aADpD,gBACSZ,EADT,EACG5B,KACRsK,aAAaC,QAJE,QAIgB3I,GAF1B,4C,sBAwBA,SAAS4I,KACd,OAAOF,aAAaG,QAAQ,SAH9BpI,EAAKV,OAAO6I,MAMG,QACbE,MA7BK,SAAP,oCA8BEC,OAzBK,WACLL,aAAaM,WARE,UAiCfC,QAlBK,WACL,IACE,IAAMjJ,EAAM0I,aAAaG,QAjBZ,SAkBb,OAAOK,KAAUlJ,GACjB,MAAOmJ,GACP,OAAO,OAcTC,aAvBK,SAAsBpJ,GAC3B0I,aAAaC,QAZE,QAYgB3I,IAuB/B4I,WCuCaS,G,4MAvEbjG,MAAQ,CACNhF,KAAM,CAAEuC,MAAO,GAAIC,SAAU,IAC7ByF,OAAQ,I,EAGVG,OAAS,CACP7F,MAAO4F,IAAIuB,SAASD,WAAWlH,QAAQjD,MAAM,YAC7CkD,SAAU2F,IAAIuB,SAASD,WAAWnK,MAAM,a,EAG1CsJ,S,uCAAW,WAAOxG,GAAP,iBAAAM,EAAA,+EAEDwI,GAAKR,MAAMtI,GAFV,OAGC4C,EAAU,EAAKrG,MAAMsI,SAArBjC,MACRgC,OAAOC,SAAWjC,EAAQA,EAAMmG,KAAKjE,SAAW,QAJzC,iDAMDe,EANC,eAMa,EAAKjD,MAAMiD,SACxB1F,MAAQ,KAAGxB,SAASf,KAC3B,EAAKqF,SAAS,CAAE4C,WART,yD,6GAaT,GAAIiD,GAAKL,UAAW,OAAO,kBAAC,IAAD,CAAUnK,GAAG,MADjC,MAEkBzB,KAAK+F,MAAtBhF,EAFD,EAECA,KAAMiI,EAFP,EAEOA,OACd,OACE,yBAAKjJ,UAAU,mBACb,4BACE,8CAEF,0BAAMoL,SAAUnL,KAAKyJ,cACnB,2BACEQ,KAAK,OACL5G,KAAK,QACLiF,GAAG,QACH6D,YAAY,QACZ7H,MAAOvD,EAAKuC,MACZtB,MAAOgH,EAAO1F,MACd4G,SAAUlK,KAAK4J,eAEjB,6BACCZ,EAAO1F,OACN,yBAAKvD,UAAU,sBAAsBiJ,EAAO1F,OAE9C,2BACE2G,KAAK,WACL5G,KAAK,WACLiF,GAAG,WACH6D,YAAY,WACZ7H,MAAOvD,EAAKwC,SACZvB,MAAOgH,EAAOzF,SACd2G,SAAUlK,KAAK4J,eAEhBZ,EAAOzF,UACN,yBAAKxD,UAAU,sBAAsBiJ,EAAOzF,UAE9C,4BAAQ0G,KAAK,SAASlK,UAAU,QAAQiK,SAAUhK,KAAKiJ,YAAvD,SAGA,yBAAKlJ,UAAU,gBACb,+CACA,kBAAC,IAAD,CAAM0B,GAAG,YAAY1B,UAAU,OAA/B,yB,GA9DQgJ,GCgFLqD,G,4MA/EbrG,MAAQ,CACNhF,KAAM,CAAEsC,KAAM,GAAIC,MAAO,GAAIC,SAAU,IACvCyF,OAAQ,I,EAGVG,OAAS,CACP9F,KAAM6F,IAAIuB,SAASD,WAAWnK,MAAM,QACpCiD,MAAO4F,IAAIuB,SAASD,WAAWlH,QAAQjD,MAAM,SAC7CkD,SAAU2F,IAAIuB,SAASD,WAAWnK,MAAM,a,EAG1CsJ,S,uCAAW,WAAOxG,GAAP,iBAAAM,EAAA,+EAGgB4I,EAAqBlJ,GAHrC,OAGDrB,EAHC,OAIPmK,GAAKF,aAAajK,EAASe,QAAQ,iBACnCkF,OAAOC,SAAW,QALX,iDAODgB,EAPC,eAOa,EAAKjD,MAAMiD,SACxB1F,MAAQ,KAAGxB,SAASf,KAC3B,EAAKqF,SAAS,CAAE4C,WATT,yD,6GAaD,IAAD,EACkBhJ,KAAK+F,MAAtBhF,EADD,EACCA,KAAMiI,EADP,EACOA,OACd,OACE,yBAAKjJ,UAAU,mBACb,4BACE,6CAEF,0BAAMoL,SAAUnL,KAAKyJ,cACnB,2BACEQ,KAAK,OACL5G,KAAK,OACLiF,GAAG,OACH6D,YAAY,OACZ7H,MAAOvD,EAAKsC,KACZrB,MAAOgH,EAAO3F,KACd6G,SAAUlK,KAAK4J,eAEjB,6BACCZ,EAAO3F,MACN,yBAAKtD,UAAU,sBAAsBiJ,EAAO3F,MAE9C,2BACE4G,KAAK,OACL5G,KAAK,QACLiF,GAAG,QACH6D,YAAY,QACZ7H,MAAOvD,EAAKuC,MACZtB,MAAOgH,EAAO1F,MACd4G,SAAUlK,KAAK4J,eAEjB,6BACCZ,EAAO1F,OACN,yBAAKvD,UAAU,sBAAsBiJ,EAAO1F,OAE9C,2BACE2G,KAAK,WACL5G,KAAK,WACLiF,GAAG,WACH6D,YAAY,WACZ7H,MAAOvD,EAAKwC,SACZvB,MAAOgH,EAAOzF,SACd2G,SAAUlK,KAAK4J,eAEhBZ,EAAOzF,UACN,yBAAKxD,UAAU,sBAAsBiJ,EAAOzF,UAE9C,4BAAQ0G,KAAK,SAASlK,UAAU,SAAhC,kB,GAvEagJ,GCMRuD,G,kLARXL,GAAKP,SACL3D,OAAOC,SAAW,W,+BAGlB,OAAO,S,GANU1H,aCqBNiM,GApBQ,SAAC,GAAoD,EAAlD/M,KAAmD,IAAlCc,EAAiC,EAA5CkM,UAAsBC,EAAsB,EAAtBA,OAAW/D,EAAW,6CAC1E,OACE,kBAAC,IAAD,iBACMA,EADN,CAEE+D,OAAQ,SAAC/M,GACP,OAAKuM,GAAKL,UASHtL,EAAY,kBAACA,EAAcZ,GAAY+M,EAAO/M,GAPjD,kBAAC,IAAD,CACE+B,GAAI,CACFwG,SAAU,SACVlC,MAAO,CAAEmG,KAAMxM,EAAMsI,kBC0BtB0E,I,kNA3Bb3G,MAAQ,G,kEAGN,IAAM5C,EAAO8I,GAAKL,UAClB5L,KAAKoG,SAAS,CAAEjD,W,+BAGR,IACAA,EAASnD,KAAK+F,MAAd5C,KACR,OACE,kBAAC,IAAMwB,SAAP,KACE,kBAAC,EAAD,CAAQxB,KAAMA,IACd,8BACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAgB3D,KAAK,mBAAmBgN,UAAWlC,KACnD,kBAAC,GAAD,CAAgB9K,KAAK,QAAQgN,UAAW1G,IACxC,kBAAC,IAAD,CAAOtG,KAAK,SAASgN,UAAWR,KAChC,kBAAC,IAAD,CAAOxM,KAAK,UAAUgN,UAAWF,KACjC,kBAAC,IAAD,CAAO9M,KAAK,YAAYgN,UAAWJ,KACnC,kBAAC,IAAD,CAAUF,KAAK,IAAIzK,GAAG,QAAQkL,OAAK,W,GApB7BrM,cCAEsM,QACW,cAA7B7E,OAAOC,SAAS6E,UAEe,UAA7B9E,OAAOC,SAAS6E,UAEhB9E,OAAOC,SAAS6E,SAAS/B,MACvB,2D,YCTNgC,IAASL,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAEFM,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvL,GACLE,QAAQF,MAAMA,EAAMsH,c","file":"static/js/main.8f5e44b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-temp.348de636.png\";","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = (path) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = (column) => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr className=\"clickable\">\r\n          {this.props.columns.map((column) => (\r\n            <th\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, { content, path }) => {\r\n    if (content) return content(item);\r\n    return _.get(item, path);\r\n  };\r\n\r\n  createKey = ({ _id }, { path, key }) => {\r\n    return _id + (path || key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody data={data} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"./common/table\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass TransactionTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"date\",\r\n      label: \"Date\",\r\n      content: (t) => {\r\n        return `${t.date.toString().split(\" \").slice(0, 4).join(\" \")}`;\r\n      },\r\n    },\r\n    {\r\n      path: \"business\",\r\n      label: \"Business Name\",\r\n    },\r\n    { path: \"category\", label: \"Category\" },\r\n    { path: \"amount\", label: \"Amount ($)\" },\r\n    {\r\n      key: \"edit\",\r\n      content: (transaction) => (\r\n        <Link\r\n          className=\"btn btn-primary\"\r\n          to={`/transactions/${transaction._id}`}\r\n        >\r\n          Edit\r\n        </Link>\r\n      ),\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: (transaction) => (\r\n        <button\r\n          onClick={() => this.props.onDelete(transaction)}\r\n          className=\"btn btn-danger\"\r\n        >\r\n          Delete\r\n        </button>\r\n      ),\r\n    },\r\n  ];\r\n  render() {\r\n    const { transactions, onSort, sortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={transactions}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransactionTable;\r\n","import axios from \"axios\";\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    console.log(\"Logging the error\", error);\r\n    alert(\"An unexpected error occurred\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","import http from \"./httpService\";\r\nimport config from \"../config.json\";\r\n\r\nconst endpoint = config.url + \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(endpoint, {\r\n    name: user.name,\r\n    email: user.email,\r\n    password: user.password,\r\n  });\r\n}\r\n\r\nexport async function getUserObject() {\r\n  try {\r\n    const { data: user } = await http.get(config.url + \"/users/me\");\r\n    return user;\r\n  } catch (ex) {}\r\n}\r\n\r\nexport async function getCategories() {\r\n  let categories = [];\r\n  const user = await getUserObject();\r\n  let index;\r\n  for (let t of user.transactions) {\r\n    if (!categories.some((c) => c.name === t.category)) {\r\n      categories.push({ name: t.category, amount: t.amount });\r\n    } else {\r\n      index = categories.findIndex((c) => c.name === t.category);\r\n      categories[index].amount += t.amount;\r\n    }\r\n  }\r\n  return categories;\r\n}\r\n\r\nexport default {\r\n  register,\r\n  getUserObject,\r\n  getCategories,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\n\r\nclass Pie extends Component {\r\n  render() {\r\n    const { categories } = this.props;\r\n    const pieData = categories.map((c) => {\r\n      return {\r\n        title: c.name,\r\n        value: c.amount,\r\n        color: `#${((Math.random() * 0xffffff) << 0)\r\n          .toString(16)\r\n          .padStart(6, \"0\")}`,\r\n      };\r\n    });\r\n    return (\r\n      <React.Fragment>\r\n        <PieChart\r\n          paddingAngle={7}\r\n          lineWidth=\"10\"\r\n          rounded\r\n          radius=\"20\"\r\n          center={[50, 28]}\r\n          data={pieData}\r\n          label={({ dataEntry }) => `${dataEntry.title} - $${dataEntry.value}`}\r\n          labelStyle={{\r\n            fontSize: \"3px\",\r\n            textAlign: \"center\",\r\n          }}\r\n          labelPosition=\"112\"\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pie;\r\n","export const monthMap = [\r\n  \"Jan\",\r\n  \"Feb\",\r\n  \"Mar\",\r\n  \"Apr\",\r\n  \"May\",\r\n  \"Jun\",\r\n  \"Jul\",\r\n  \"Aug\",\r\n  \"Sep\",\r\n  \"Oct\",\r\n  \"Nov\",\r\n  \"Dec\",\r\n];\r\n","import React from \"react\";\r\nimport { monthMap } from \"./../../utils/monthMap\";\r\n\r\nconst ListGroup = ({ items, onItemSelect, selectedItem }) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map((item) => {\r\n        const date = new Date(item);\r\n        return (\r\n          <li\r\n            key={item}\r\n            onClick={() => onItemSelect(item)}\r\n            className={\r\n              item === selectedItem\r\n                ? \"list-group-item ml-5 active\"\r\n                : \"list-group-item ml-5\"\r\n            }\r\n          >\r\n            {monthMap[date.getMonth()]} - {date.getFullYear()}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport TransactionTable from \"./transactionTable\";\r\nimport { getUserObject, getCategories } from \"../services/userService\";\r\nimport Pie from \"./common/pie\";\r\nimport ListGroup from \"./common/listGroup\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    transactions: [],\r\n    categories: [],\r\n    months: [],\r\n    sortColumn: { path: \"date\", order: \"asc\" },\r\n    currentMonth: new Date(),\r\n    budget: 0,\r\n  };\r\n\r\n  getMonths(transactions) {\r\n    let months = [];\r\n    let month;\r\n    for (let t of transactions) {\r\n      t.date = new Date(t.date);\r\n      month = new Date(t.date.getFullYear(), t.date.getMonth());\r\n      if (!months.includes(month.toDateString()))\r\n        months.push(month.toDateString());\r\n    }\r\n    return months;\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const user = await getUserObject();\r\n    if (!user) return;\r\n    const transactions = user.transactions;\r\n    let categories = [];\r\n    for (let t of transactions) {\r\n      t.date = new Date(t.date);\r\n    }\r\n    categories = await getCategories();\r\n    const months = this.getMonths(transactions);\r\n    const budget = user.budget;\r\n    this.setState({ transactions, categories, budget, months });\r\n  }\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  newDate(date) {\r\n    const split = date.split(\" \");\r\n    const month = this.monthMap.indexOf(split[0]);\r\n    const year = split[2];\r\n    const newDate = new Date(year, month);\r\n    return newDate;\r\n  }\r\n\r\n  handleMonthSelect = (date) => {\r\n    this.setState({ currentMonth: date });\r\n  };\r\n\r\n  handleDelete = () => {\r\n    console.log(\"Delete\");\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      transactions: allTransactions,\r\n      categories: allCategories,\r\n      sortColumn,\r\n      currentMonth,\r\n    } = this.state;\r\n    let filtered = allTransactions;\r\n    let spent = 0;\r\n    let categories = allCategories;\r\n\r\n    if (filtered.length > 0) {\r\n      filtered = allTransactions.filter(\r\n        (t) => new Date(t.date).getMonth() === new Date(currentMonth).getMonth()\r\n      );\r\n      categories = [];\r\n      for (let t of filtered) {\r\n        spent += t.amount;\r\n        if (categories.find((e) => e.name === t.category))\r\n          categories.find((e) => e.name === t.category).amount += t.amount;\r\n        else categories.push({ name: t.category, amount: t.amount });\r\n      }\r\n    }\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    return { sorted, spent, categories };\r\n  };\r\n\r\n  render() {\r\n    const { sortColumn, budget, currentMonth, months } = this.state;\r\n    const { sorted: transactions, spent, categories } = this.getPageData();\r\n    return (\r\n      <div className=\"text-center float-center\">\r\n        <h1>This Month's Budget: ${budget}</h1>\r\n        <h1>So Far You've Spent: ${spent}</h1>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-2\" style={{ marginLeft: 100 }}>\r\n            <ListGroup\r\n              items={months}\r\n              selectedItem={currentMonth}\r\n              onItemSelect={this.handleMonthSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-5\">\r\n            <TransactionTable\r\n              transactions={transactions}\r\n              spent={spent}\r\n              sortColumn={sortColumn}\r\n              onDelete={this.handleDelete}\r\n              onSort={this.handleSort}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            <Pie transactions={transactions} categories={categories} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport \"../../view/css/nav-bar.css\";\r\nimport logo from \"../../view/images/logo-temp.png\";\r\n\r\nclass NavBar extends Component {\r\n  componentDidMount() {\r\n    this.props.history.listen(() => {\r\n      const shouldLogout = window.location.pathname === \"/login\" ? true : false;\r\n      this.setState({ loggedIn: !shouldLogout });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"logo pl-2\" to=\"/home\">\r\n          <img src={logo} alt=\"Capital logo\" />\r\n        </Link>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <div className=\"navbar-nav mx-auto\">\r\n            {user && (\r\n              <React.Fragment>\r\n                <NavLink\r\n                  className=\"nav-transaction nav-item nav-link col text-center text-nowrap\"\r\n                  to=\"/transaction/new\"\r\n                >\r\n                  New Transaction\r\n                </NavLink>\r\n\r\n                <NavLink\r\n                  className=\"nav-item nav-link col text-nowrap\"\r\n                  to=\"/profile\"\r\n                >\r\n                  {user.name}'s Profile\r\n                </NavLink>\r\n\r\n                <NavLink\r\n                  className=\"nav-item nav-link col\"\r\n                  onClick={this.handleLogout}\r\n                  to=\"/logout\"\r\n                >\r\n                  Logout\r\n                </NavLink>\r\n              </React.Fragment>\r\n            )}\r\n            {!user && (\r\n              <NavLink className=\"nav-item nav-link col login\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(NavBar);\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}></label>\r\n      {label}\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, error, options, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...rest} name={name} id={name} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    this.doSubmit(this.state.data);\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        error={errors[name]}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import http from \"./httpService\";\r\nimport config from \"../config.json\";\r\n\r\nconst url = `${config.url}/transactions`;\r\n\r\nexport async function saveTransaction(transaction) {\r\n  transaction.date = new Date(transaction.date);\r\n  if (transaction._id) {\r\n    //update db\r\n  }\r\n  const { data } = await http.post(url, transaction);\r\n  return data;\r\n}\r\n\r\nexport async function getTransaction(transactionId) {\r\n  const { data: transaction } = await http.get(`${url}/${transactionId}`);\r\n  return transaction;\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport \"../view/css/transaction.css\";\r\nimport Form from \"./common/form\";\r\nimport {\r\n  saveTransaction,\r\n  getTransaction,\r\n} from \"../services/transactionService\";\r\n\r\nclass Transaction extends Form {\r\n  state = {\r\n    data: { date: \"\", category: \"\", business: \"\", amount: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    date: Joi.date().required(),\r\n    category: Joi.string().min(5).max(20).required(),\r\n    business: Joi.string().min(5).max(20).required(),\r\n    amount: Joi.number().min(0).required(),\r\n  };\r\n\r\n  doSubmit = (transaction) => {\r\n    saveTransaction(transaction);\r\n\r\n    this.props.history.push(\"/home\");\r\n  };\r\n\r\n  async populateTransaction() {\r\n    try {\r\n      const transId = this.props.match.params.id;\r\n      if (transId === \"new\") return;\r\n\r\n      const transaction = await getTransaction(transId);\r\n      const toState = {\r\n        date: transaction.date,\r\n        category: transaction.category,\r\n        business: transaction.business,\r\n        amount: transaction.amount,\r\n      };\r\n      this.setState({ data: toState });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateTransaction();\r\n  }\r\n\r\n  render() {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <div className=\"transaction\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"date\"> Date: </label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            value={data.date}\r\n            error={errors.date}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label htmlFor=\"category\">Category:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"category\"\r\n            name=\"category\"\r\n            value={data.category}\r\n            error={errors.category}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label htmlFor=\"business\"> Business Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"business\"\r\n            name=\"business\"\r\n            value={data.business}\r\n            error={errors.business}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label htmlFor=\"amount\"> Transaction Amount:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            name=\"amount\"\r\n            value={data.amount}\r\n            error={errors.amount}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button\r\n            style={{ backgroundColor: \"#8684e7\" }}\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Transaction;\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\nimport config from \"../config.json\";\r\n\r\nconst endpoint = config.url + \"/login\";\r\nconst tokenKey = \"token\";\r\n\r\nexport async function login({ email, password }) {\r\n  const { data: jwt } = await http.post(endpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function logInWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function getUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\nexport default {\r\n  login,\r\n  logout,\r\n  getUser,\r\n  logInWithJwt,\r\n  getJwt,\r\n};\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport \"../view/css/login.css\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Login extends Form {\r\n  state = {\r\n    data: { email: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    email: Joi.string().required().email().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async (user) => {\r\n    try {\r\n      await auth.login(user);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/home\";\r\n    } catch (ex) {\r\n      const errors = { ...this.state.errors };\r\n      errors.email = ex.response.data;\r\n      this.setState({ errors });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getUser()) return <Redirect to=\"/\" />;\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <div className=\"login-container\">\r\n        <ul>\r\n          <li>Welcome Back!</li>\r\n        </ul>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n            value={data.email}\r\n            error={errors.email}\r\n            onChange={this.handleChange}\r\n          />\r\n          <br />\r\n          {errors.email && (\r\n            <div className=\"alert alert-danger\">{errors.email}</div>\r\n          )}\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={data.password}\r\n            error={errors.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          {errors.password && (\r\n            <div className=\"alert alert-danger\">{errors.password}</div>\r\n          )}\r\n          <button type=\"submit\" className=\"Login\" disabled={this.validate()}>\r\n            Login\r\n          </button>\r\n          <div className=\"registration\">\r\n            <p>Need an account?</p>\r\n            <Link to=\"/register\" className=\"cta\">\r\n              Register here!\r\n            </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport \"../view/css/login.css\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Register extends Form {\r\n  state = {\r\n    data: { name: \"\", email: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    name: Joi.string().required().label(\"Name\"),\r\n    email: Joi.string().required().email().label(\"Email\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async (user) => {\r\n    //call server\r\n    try {\r\n      const response = await userService.register(user);\r\n      auth.logInWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/home\";\r\n    } catch (ex) {\r\n      const errors = { ...this.state.errors };\r\n      errors.email = ex.response.data;\r\n      this.setState({ errors });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <div className=\"login-container\">\r\n        <ul>\r\n          <li>Registration</li>\r\n        </ul>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            value={data.name}\r\n            error={errors.name}\r\n            onChange={this.handleChange}\r\n          />\r\n          <br />\r\n          {errors.name && (\r\n            <div className=\"alert alert-danger\">{errors.name}</div>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Email\"\r\n            value={data.email}\r\n            error={errors.email}\r\n            onChange={this.handleChange}\r\n          />\r\n          <br />\r\n          {errors.email && (\r\n            <div className=\"alert alert-danger\">{errors.email}</div>\r\n          )}\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            value={data.password}\r\n            error={errors.password}\r\n            onChange={this.handleChange}\r\n          />\r\n          {errors.password && (\r\n            <div className=\"alert alert-danger\">{errors.password}</div>\r\n          )}\r\n          <button type=\"submit\" className=\"Login\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/login\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport NavBar from \"./components/common/navbar\";\nimport Transaction from \"./components/transaction\";\nimport Login from \"./components/login\";\nimport Register from \"./components/register\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar user={user} />\n        <main>\n          <Switch>\n            <ProtectedRoute path=\"/transaction/:id\" component={Transaction} />\n            <ProtectedRoute path=\"/home\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/register\" component={Register} />\n            <Redirect from=\"/\" to=\"/home\" exact />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}